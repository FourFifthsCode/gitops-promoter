apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: commitstatuses.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: CommitStatus
    listKind: CommitStatusList
    plural: commitstatuses
    singular: commitstatus
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CommitStatus is the Schema for the commitstatuses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CommitStatusSpec defines the desired state of CommitStatus
            properties:
              foo:
                description: Foo is an example field of CommitStatus. Edit commitstatus_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: CommitStatusStatus defines the observed state of CommitStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: promotionstrategies.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PromotionStrategy
    listKind: PromotionStrategyList
    plural: promotionstrategies
    singular: promotionstrategy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PromotionStrategy is the Schema for the promotionstrategies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PromotionStrategySpec defines the desired state of PromotionStrategy
            properties:
              foo:
                description: Foo is an example field of PromotionStrategy. Edit promotionstrategy_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: PromotionStrategyStatus defines the observed state of PromotionStrategy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: proposedcommits.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ProposedCommit
    listKind: ProposedCommitList
    plural: proposedcommits
    singular: proposedcommit
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProposedCommit is the Schema for the proposedcommits API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProposedCommitSpec defines the desired state of ProposedCommit
            properties:
              activeBranch:
                description: ActiveBranch staging hydrated branch
                type: string
              commitStatuses:
                items:
                  properties:
                    key:
                      description: Key staging hydrated branch
                      type: string
                  required:
                  - key
                  type: object
                type: array
              proposedBranch:
                description: ProposedBranch staging hydrated branch
                type: string
              repository:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                  scmProviderRef:
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - name
                - owner
                - scmProviderRef
                type: object
            required:
            - activeBranch
            - proposedBranch
            - repository
            type: object
          status:
            description: ProposedCommitStatus defines the observed state of ProposedCommit
            properties:
              active:
                properties:
                  drySha:
                    type: string
                  hydratedSha:
                    type: string
                type: object
              commitStatuses:
                items:
                  properties:
                    key:
                      description: Key staging hydrated branch
                      type: string
                    phase:
                      description: Phase what phase is the status in
                      type: string
                  required:
                  - key
                  - phase
                  type: object
                type: array
              proposed:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  drySha:
                    type: string
                  hydratedSha:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: pullrequests.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PullRequest is the Schema for the pullrequests API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PullRequestSpec defines the desired state of PullRequest
            properties:
              description:
                description: Body the description body of the pull/merge request
                type: string
              repository:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                  scmProviderRef:
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - name
                - owner
                - scmProviderRef
                type: object
              sourceBranch:
                description: Base the git reference that we are merging into Head
                  ---> Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              state:
                default: open
                description: State of the merge request closed/merged/open
                type: string
              targetBranch:
                description: Head the git reference we are merging from Head --->
                  Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              title:
                description: Title is the title of the pull request.
                type: string
            required:
            - repository
            - sourceBranch
            - state
            - targetBranch
            - title
            type: object
          status:
            description: PullRequestStatus defines the observed state of PullRequest
            properties:
              id:
                description: ID the id of the pull request
                type: string
              specHash:
                description: SpecHash used to track if we need to update
                type: string
              state:
                description: State of the merge request closed/merged/open
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: revertcommits.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: RevertCommit
    listKind: RevertCommitList
    plural: revertcommits
    singular: revertcommit
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RevertCommit is the Schema for the revertcommits API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RevertCommitSpec defines the desired state of RevertCommit
            properties:
              foo:
                description: Foo is an example field of RevertCommit. Edit revertcommit_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: RevertCommitStatus defines the observed state of RevertCommit
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: scmproviders.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ScmProvider
    listKind: ScmProviderList
    plural: scmproviders
    singular: scmprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScmProvider is the Schema for the scmproviders API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScmProviderSpec defines the desired state of ScmProvider
            properties:
              fake:
                description: Fake required configuration for Fake as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              github:
                description: GitHub required configuration for GitHub as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              secretRef:
                description: SecretRef contains the credentials required to auth to
                  a specific provider
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            description: ScmProviderStatus defines the observed state of ScmProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-role
  namespace: promoter-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promoter-manager-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - commitstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - commitstatuses/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - commitstatuses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - promotionstrategies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - promotionstrategies/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - promotionstrategies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - proposedcommits
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - proposedcommits/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - proposedcommits/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - pullrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - pullrequests/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - pullrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - revertcommits
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - revertcommits/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - revertcommits/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - scmproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - scmproviders/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - scmproviders/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-rolebinding
  namespace: promoter-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promoter-leader-election-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-manager-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-proxy-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager-metrics-service
  namespace: promoter-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager
  namespace: promoter-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: promoter-controller-manager
      terminationGracePeriodSeconds: 10
